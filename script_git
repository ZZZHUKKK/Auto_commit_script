#!/bin/bash
MESSAGE=${1:-"Autocommit_$(date)"}
ORIGIN=${2:-"origin"}
LOGFILE=${3:-"$HOME/autogit.log"}

while getopts 'm:o:l:' opt; do
    case "${opt}" in
      m)
        unset MESSAGE
        MESSAGE="$OPTARG"
        ;;
      o)
        unset ORIGIN
        ORIGIN="$OPTARG"
        ;;
      l)
        unset LOGFILE
       LOGFILE="$OPTARG"
        ;;
      *)
        printf "Ввели что то не то"
        exit 1
        ;;
    esac
done

mkdir -p "$(dirname "$LOGFILE")"

printf "--------------------$MESSAGE_$ORIGIN-----------------------" >> "$LOGFILE"
printf "" >> "$LOGFILE"
printf "DATE\t\tTYPE\t\tMESSAGE" >> "$LOGFILE"

log_streams() {
    local out="$1"
    local err="$2"

    out="$(printf "$out" | tr -d '\r')"
    err="$(printf "$err" | tr -d '\r')"

    if [[ -n $out ]]; then
        printf "$(date '+%Y-%m-%d %H:%M:%S')\t|\t[STDOUT]\t|\t$out" >> "$LOGFILE"
    fi
    if [[ -n $err ]]; then
        printf "$(date '+%Y-%m-%d %H:%M:%S')\t|\t[STDERR]\t|\t$err" >> "$LOGFILE"
    fi
}


exec 4> >(
    out_buf=""
    while IFS= read -r line; do
        out_buf+="$line\n"
    done
    [[ -n "$out_buf" ]] && log_streams "$out_buf" ""
)
exec 5> >(
    err_buf=""
    while IFS= read -r line; do
        err_buf+="$line\n"
    done
    [[ -n "$err_buf" ]] && log_streams "" "$err_buf"
)

exec 1>&4
exec 2>&5

[[ ! -d .git ]] && { printf "Ошибка. Директория .git не обнаружена" >&5 ; exit 1; }
[[ -z $(git status --porcelain) ]] && { printf "Нет изменений" >&5 ; exit 0; } 
git add . || { printf "Ошибка индексирования изменений" >&5  ; exit 1; }

git commit -m "$MESSAGE" || { printf "Ошибка создания коммита $MESSAGE" >&5  ; exit 1; }

git push -u $ORIGIN || { printf "Ошибка отправления в репозиторий" >&5  ; exit 1; }

printf "Изменения успешно добавлены" >&4 